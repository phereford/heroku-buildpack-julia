#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

mkdir .profile.d
touch .profile.d/julia.sh
PROFILE_PATH=".profile.d/julia.sh"


set-env() {
  echo "export $1=$2" >> $PROFILE_PATH
}

# parse args
BUILD_DIR=$1
CACHE_DIR=$2

BP_DIR=`cd $(dirname $0); cd ..; pwd`

cd ${BUILD_DIR}

echo -n "-----> Installing julia ...."

deps="https://julialang-s3.julialang.org/bin/linux/x64/1.1/julia-1.1.0-linux-x86_64.tar.gz"

for dep in $deps; do
  depb=$(basename $dep)
  echo "        - $depb"
  curl -LO $dep
  mkdir julia
  tar -xzf $depb -C julia --strip-components=1
  rm $depb
done


set-env PATH '$HOME/.apt/usr/bin:$HOME/julia/bin:$PATH'
set-env LIBRARY_PATH '$HOME/.apt/usr/lib/x86_64-linux-gnu:$HOME/julia/lib:$HOME/julia/lib/x86_64-linux-gnu:$LIBRARY_PATH'
set-env LD_LIBRARY_PATH '$HOME/.apt/usr/lib/x86_64-linux-gnu:$HOME/julia/lib:$HOME/julia/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH'
set-env JULIA_LOAD_PATH '@:$HOME'

export LIBRARY_PATH=./.apt/usr/lib/x86_64-linux-gnu:./julia/lib:./julia/lib/x86_64-linux-gnu:$LIBRARY_PATH
export LD_LIBRARY_PATH=./.apt/usr/lib/x86_64-linux-gnu:./julia/lib:./julia/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
export PATH=./.apt/usr/bin:./julia/bin:$PATH
export JULIA_LOAD_PATH="@:"
echo $PATH
echo $LD_LIBRARY_PATH
# echo $(cmake -version)
echo $(julia -v)

echo " done"

if [ "${PIPESTATUS[*]}" != "0" ]; then
  echo " !     Failed to install ${JULIA_DIST}"
  exit 1
fi


# these are not presistent in heroku
mkdir -p ~/.julia/config
set +H
julia --project=$(pwd) -e "using Pkg; pkg\"instantiate\";pkg\"precompile\";
  io = open(\"$HOME/.julia/config/startup.jl\", \"w\");
  packages = Pkg.installed();
  for package in packages
    pkgid = Base.identify_package(package[1]);
    Base.require(pkgid);
  end
  for packagemodule in Base.loaded_modules
    pkgid = packagemodule[1];
    buildid = Base.module_build_id(packagemodule[2]);
    uuid = pkgid.uuid == nothing ? \"nothing\" : \"\"\"Base.UUID(\"\$(pkgid.uuid)\")\"\"\";
    println(io, \"\"\"Base.push!(Base._concrete_dependencies, Base.PkgId(\$uuid, \"\$(pkgid.name)\") => \$buildid)\"\"\");
  end
  close(io)"

cp -r ~/.julia ${BUILD_DIR}/.julia
